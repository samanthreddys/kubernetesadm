--- 
- 
  become: true
  handlers: 
    - 
      name: "docker status"
      service: "name=docker state=started"
  hosts: all
  tasks: 
    - 
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: true
      name: "Install packages that allow apt to be used over HTTPS"
      vars: 
        packages: 
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
    - 
      apt_key: 
        state: present
        url: "https://download.docker.com/linux/ubuntu/gpg"
      name: "Add an apt signing key for Docker"
    - 
      apt_repository: 
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable"
        state: present
      name: "Add apt repository for stable version"
    - 
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: true
      name: "Install docker and its dependecies"
      notify: 
        - "docker status"
      vars: 
        packages: 
          - docker-ce
          - docker-ce-cli
          - containerd.io
    - 
      name: "Add vagrant user to docker group"
      user: 
        group: docker
        name: vagrant
    
    - 
      apt_key: 
        state: present
        url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
      name: "Add an apt signing key for Kubernetes"
    - 
      apt_repository: 
        filename: kubernetes.list
        repo: "deb https://apt.kubernetes.io/ kubernetes-xenial main"
        state: present
        update_cache: true
      name: "Adding apt repository for Kubernetes"
    - 
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: true
      name: "Install Kubernetes binaries"
      register: installed
      vars: 
        packages: 
          - kubelet
          - kubeadm
          - kubectl
    - 
      name: "Restart kubelet"
      service: 
        daemon_reload: true
        name: kubelet
        state: restarted
    - 
      command: "swapoff -a"
      name: "Disable swap"
    - 
      command: "kubeadm init --apiserver-advertise-address=\"192.168.50.10\" --apiserver-cert-extra-sans=\"192.168.50.10\"  --node-name master --pod-network-cidr=192.168.0.0/16"
      name: "Initialize the Kubernetes cluster using kubeadm"
      when: "installed is changed"
    - 
      become: false
      file: 
        path: /home/vagrant/.kube
        state: directory
      name: "Create .kube folder"
    - 
      copy: "remote_src=True src=/etc/kubernetes/admin.conf dest=/home/vagrant/.kube/config"
      name: "Copy admin.conf file"
    - 
      file: 
        group: vagrant
        owner: vagrant
        path: /home/vagrant/.kube/config
      name: "Change admin.conf owner"
    - 
      become: false
      command: "kubectl apply -f https://docs.projectcalico.org/v3.10/manifests/calico.yaml"
      name: "Install calico pod network"
    - 
      command: "kubeadm token create --print-join-command"
      name: "Generate join command"
      register: join_command
    - 
      become: false
      copy: 
        content: "{{ join_command.stdout_lines[0] }}"
        dest: join
      delegate_to: localhost
      name: "Copy join command to local file"
