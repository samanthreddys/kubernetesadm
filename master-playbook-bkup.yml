--- 
- 
  become: true
  handlers: 
    - 
      name: "docker status"
      service: "name=docker state=started"
  hosts: all
  tasks: 
    - 
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: true
      name: "Install packages that allow apt to be used over HTTPS"
      vars: 
        packages: 
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
    - 
      apt_key: 
        state: present
        url: "https://download.docker.com/linux/ubuntu/gpg"
      name: "Add an apt signing key for Docker"
    - 
      apt_repository: 
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable"
        state: present
      name: "Add apt repository for stable version"
    - 
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: true
      name: "Install docker and its dependecies"
      notify: 
        - "docker status"
      vars: 
        packages: 
          - docker-ce
          - docker-ce-cli
          - containerd.io
    - 
      name: "Add vagrant user to docker group"
      user: 
        group: docker
        name: vagrant
    - 
      apt_repository: 
        filename: "kubernetes"
        repo: "deb https://apt.kubernetes.io/kubernetes-xenial main"
        state: present
      name: "Adding apt repository for Kubernetes"
    - 
      apt_key: 
        state: present
        url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
      name: "Add an apt signing key for Kubernetes"
    - 
      mount: 
        fstype: swap
        name: "{{ item }}"
        state: absent
      name: "Remove swapfile from /etc/fstab"
      with_items: 
        - swap
        - none
    - 
      command: "swapoff -a"
      name: "Disable swap"
      when: "ansible_swaptotal_mb > 0"
    - 
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: true
      name: "Install Kubernetes binaries"
      vars: 
        packages: 
          - kubelet
          - kubeadm
          - kubectl
    - 
      lineinfile: 
        line: "KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}"
        path: /etc/default/kubelet
      name: "Configure node ip"
    - 
      name: "Restart kubelet"
      service: 
        daemon_reload: true
        name: kubelet
        state: restarted
    - 
      command: "kubeadm init --apiserver-advertise-address=\"192.168.50.10\" --apiserver-cert-extra-sans=\"192.168.50.10\"  --node-name k8s-master --pod-network-cidr=192.168.0.0/16"
      name: "Initialize the Kubernetes cluster using kubeadm"
    - 
      command: "{{ item }}"
      name: "Setup kubeconfig for vagrant user"
      with_items: 
        - "mkdir -p /home/vagrant/.kube"
        - "cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config"
        - "chown vagrant:vagrant /home/vagrant/.kube/config"
    - 
      command: "kubeadm token create --print-join-command"
      name: "Generate join command"
      register: join_command
    - 
      local_action: "copy content=\"{{ join_command.stdout_lines[0]}}\" dest=\"./join-command\""
      name: "Copy join command to local file"
